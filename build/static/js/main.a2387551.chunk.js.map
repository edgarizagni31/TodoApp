{"version":3,"sources":["reportWebVitals.js","components/TodoForm.js","components/TodoListItem.js","components/FilterTodos.js","components/TodoList.js","helpers/todoReducer.js","TodoApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoForm","addTodo","inputEl","useRef","className","onSubmit","e","todo","preventDefault","current","value","id","Date","now","desc","done","alert","type","name","placeholder","ref","autoComplete","TodoListItem","deleteTodo","toogleTodo","onClick","FilterTodos","todos","map","TodoList","useState","isFilter","filter","setFilter","length","count","setCount","cont","forEach","todoReducer","state","action","payload","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"kNAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCHDQ,EAAW,SAAC,GAAkB,IAAfC,EAAc,EAAdA,QAClBC,EAAUC,iBAAO,MAmBvB,OACI,sBAAMC,UAAY,OAAOC,SAlBR,SAACC,GAElB,IAAIC,EADJD,EAAEE,iBAG4B,KAA1BN,EAAQO,QAAQC,OAChBH,EAAO,CACHI,GAAIC,KAAKC,MACTC,KAAMZ,EAAQO,QAAQC,MACtBK,MAAM,GAEVd,EAASM,GACTL,EAAQO,QAAQC,MAAQ,IAExBM,MAAM,oCAKV,SACI,uBACIC,KAAO,OACPC,KAAO,OACPC,YAAc,yBACdC,IAAOlB,EACPmB,aAAe,MACfjB,UAAY,mB,OC5BfkB,EAAe,SAAC,GAAsC,IAApCf,EAAmC,EAAnCA,KAAMgB,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAI/C,OACE,sBAAKpB,UAAU,kBAAf,UACE,wBACEA,UAAS,UAAKG,EAAKQ,MAAQ,yBAAlB,oBACTU,QAAS,kBANWd,EAMYJ,EAAKI,GANVa,EAAWb,GAAnB,IAACA,KAQtB,mBAAGP,UAAS,UAAKG,EAAKQ,MAAQ,WAAlB,oBAAZ,SACGR,EAAKO,OAER,cAAC,IAAD,CACEV,UAAU,kBACVqB,QAAS,kBAdWd,EAcYJ,EAAKI,GAdVY,EAAWZ,GAAnB,IAACA,SC6Bbe,G,MA/BK,SAAC,GAA+C,IAA5CT,EAA2C,EAA3CA,KAAMU,EAAqC,EAArCA,MAAOJ,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,WAE7C,OACI,mCAEiB,YAATP,EAEAU,EAAMC,KAAK,SAAArB,GAAI,OACVA,EAAKQ,MACN,cAAC,EAAD,CAEIR,KAAQA,EACRgB,WAAcA,EACdC,WAAcA,GAHPjB,EAAKI,OAOpBgB,EAAMC,KAAK,SAAArB,GAAI,OACXA,EAAKQ,MACL,cAAC,EAAD,CAEIR,KAAQA,EACRgB,WAAcA,EACdC,WAAcA,GAHPjB,EAAKI,WCfvBkB,EAAW,SAAC,GAAuC,IAArCF,EAAoC,EAApCA,MAAOJ,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAE5C,EAA8BM,mBAAS,CAAEC,UAAU,EAAOd,KAAM,KAAhE,mBAAQe,EAAR,KAAgBC,EAAhB,KACA,EAA4BH,mBAAUH,EAAMO,QAA5C,mBAAQC,EAAR,KAAeC,EAAf,KA+BA,OACE,0BAAShC,UAAU,YAAnB,UACE,yBAASA,UAAU,mBAAnB,SAEK4B,EAAOD,SAUR,cAAC,EAAD,CACEd,KAAQe,EAAOf,KACfU,MAASA,EACTJ,WAAcA,EACdC,WAAcA,IAbhBG,EAAMC,KAAK,SAAArB,GAAI,OACb,cAAC,EAAD,CAEEA,KAAQA,EACRgB,WAAcA,EACdC,WAAcA,GAHPjB,EAAKI,SAepB,0BAASP,UAAU,gBAAnB,UACE,oBAAGA,UAAU,mBAAb,oBAAwC+B,EAAxC,OACA,sBAAK/B,UAAU,qBAAf,UACE,mBAAGA,UAAU,oBAAoBqB,QAtDnB,WACrBQ,EAAW,CAACF,UAAU,EAAOd,KAAM,KACnCmB,EAAUT,EAAMO,SAoDT,mBAGA,mBAAG9B,UAAU,oBAAoBqB,QApDf,WACxB,IAAIY,EAAO,EAEXV,EAAMW,SAAQ,SAAA/B,IACXA,EAAKQ,MAAQsB,OAGhBD,EAASC,GAETJ,EAAW,CAACF,UAAU,EAAMd,KAAM,aA2C5B,qBAGA,mBAAGb,UAAU,oBAAoBqB,QA3Cd,WACzB,IAAIY,EAAO,EAEXV,EAAMW,SAAQ,SAAA/B,GACZA,EAAKQ,MAAQsB,OAGfD,EAASC,GAETJ,EAAW,CAACF,UAAU,EAAMd,KAAM,cAkC5B,4BAIF,mBAAGb,UAAU,wBAAb,uC,cC7EKmC,EAAe,SAAEC,EAAOC,GACjC,OAASA,EAAOxB,MACZ,IAAK,MACD,MAAM,GAAN,mBAAYuB,GAAZ,CAAmBC,EAAOC,UAC9B,IAAK,SACD,OAAOF,EAAMR,QAAQ,SAAAzB,GAAI,OAAIA,EAAKI,KAAO8B,EAAOC,WACpD,IAAK,SACD,OAAOF,EAAMZ,KAAK,SAAArB,GAAI,OAAMA,EAAKI,KAAO8B,EAAOC,QAArB,YAAC,eAAqCnC,GAAtC,IAA4CQ,MAAOR,EAAKQ,OAAQR,KAC9F,QACI,OAAOiC,ICJbG,EAAO,kBAAMC,KAAKC,MAAOC,aAAaC,QAAQ,WAAc,IAErDC,EAAU,WACnB,MAA4BC,qBAAWV,EAAa,GAAII,GAAxD,mBAAQhB,EAAR,KAAeuB,EAAf,KAkBA,OAJAC,qBAAW,WACPL,aAAaM,QAAQ,QAASR,KAAKS,UAAU1B,MAC9C,CAACA,IAGA,qCACI,wBAAQvB,UAAY,SAApB,SACI,oBAAIA,UAAY,gBAAhB,sBAEJ,iCACI,cAAC,EAAD,CAAUH,QAtBL,SAAEM,GACf2C,EAAU,CAAEjC,KAAM,MAAOyB,QAASnC,OAsB1B,cAAC,EAAD,CAAUoB,MAASA,EAAOJ,WAnBnB,SAAEZ,GACjBuC,EAAU,CAAEjC,KAAM,SAAUyB,QAAS/B,KAkByBa,WAf/C,SAAEb,GACjBuC,EAAU,CAAEjC,KAAM,SAAUyB,QAAS/B,c,MCX7C2C,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,eAAe,SAErDlE,M","file":"static/js/main.a2387551.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useRef } from 'react';\n\nimport './styles/TodoForm.css';\n\nexport const TodoForm = ( { addTodo }) => {\n    const inputEl = useRef(null);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let todo;\n\n        if (inputEl.current.value !== \"\") {\n            todo = {\n                id: Date.now(),\n                desc: inputEl.current.value,\n                done: false\n            };\n            addTodo( todo );\n            inputEl.current.value = \"\";\n        }else {\n            alert(\"Este campo no puede estar vacio\");\n        }\n    }\n\n    return (\n        <form className = 'form' onSubmit = {handleSubmit}>\n            <input\n                type = 'text'\n                name = 'desc'\n                placeholder = 'Crear un nuevo todo...'\n                ref = {inputEl}\n                autoComplete = 'off'\n                className = 'form__input'\n            />\n        </form>\n    )\n}\n","import React from \"react\";\n\nimport { BsX } from \"react-icons/bs\";\n\nexport const TodoListItem = ({ todo, deleteTodo, toogleTodo }) => {\n  const handleRemoveTodo = (id) => deleteTodo(id);\n  const handleToogleTodo = (id) => toogleTodo(id);\n\n  return (\n    <div className='todo-list__item'>\n      <button\n        className={`${todo.done && \"todo-list__btn--active\"} todo-list__btn `}\n        onClick={() => handleToogleTodo(todo.id)}\n      ></button>\n      <p className={`${todo.done && 'complete'} todo-list__text`}>\n        {todo.desc}\n      </p>\n      <BsX\n        className='todo-list__icon'\n        onClick={() => handleRemoveTodo(todo.id)}\n      />\n    </div>\n  );\n};\n","import React from 'react'\nimport { TodoListItem } from './TodoListItem'\n\nconst FilterTodos = ( { type, todos, deleteTodo, toogleTodo } ) => {\n\n    return (\n        <>\n            {\n                type === 'actives'\n                ?\n                todos.map( todo => (\n                    !todo.done &&\n                    <TodoListItem\n                        key = {todo.id}\n                        todo = {todo}\n                        deleteTodo = {deleteTodo}\n                        toogleTodo = {toogleTodo}\n                    />\n                ))\n                :\n                todos.map( todo => (\n                    todo.done &&\n                    <TodoListItem\n                        key = {todo.id}\n                        todo = {todo}\n                        deleteTodo = {deleteTodo}\n                        toogleTodo = {toogleTodo}\n                    />\n                ))\n            }\n        </>\n    )\n}\n\nexport default FilterTodos","import React, { useState }  from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoListItem } from './TodoListItem';\n\nimport './styles/TodoList.css';\nimport FilterTodos from './FilterTodos';\n\nexport const TodoList = ({ todos, deleteTodo, toogleTodo }) => {\n\n  const [ filter, setFilter ] = useState({ isFilter: false, type: ''});\n  const [ count, setCount ] = useState( todos.length );\n\n  const handleViewAll = () => {\n   setFilter( {isFilter: false, type: ''} );\n   setCount( todos.length );    \n  }; \n\n  const handleViewActives = () => {\n    let cont = 0;\n\n    todos.forEach(todo => {\n      !todo.done && cont++;\n    });\n\n    setCount(cont);\n\n    setFilter( {isFilter: true, type: 'actives'} );\n  };\n\n  const handleViewComplete = () => {\n    let cont = 0;\n\n    todos.forEach(todo => {\n      todo.done && cont++;\n    });\n\n    setCount(cont);\n\n    setFilter( {isFilter: true, type: 'complete'} );\n  };\n\n  return (\n    <section className='todo-list'>\n      <article className='todo-list__items'>\n        {\n          !filter.isFilter ?\n          todos.map( todo => (\n            <TodoListItem\n              key = {todo.id}\n              todo = {todo}\n              deleteTodo = {deleteTodo}\n              toogleTodo = {toogleTodo}\n            />\n          ))\n          :\n          <FilterTodos \n            type = {filter.type}\n            todos = {todos}\n            deleteTodo = {deleteTodo}\n            toogleTodo = {toogleTodo}\n          />\n        }\n      </article>\n      <article className='todo-list__op'>\n        <p className='todo-list__total'>Total: {count} </p>\n        <div className='todo-list__options'>\n          <p className='todo-list__option' onClick={handleViewAll}>\n            Todas\n          </p>\n          <p className='todo-list__option' onClick={handleViewActives}>\n            Activas\n          </p>\n          <p className='todo-list__option' onClick={handleViewComplete}>\n            Completadas\n          </p>\n        </div>\n        <p className='todo-list__delete-all'>Borrar completadas</p>\n      </article>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  toogleTodo: PropTypes.func.isRequired,\n};\n","export const todoReducer =  ( state, action ) => {\n    switch ( action.type ) {\n        case 'add': \n            return [ ...state, action.payload];\n        case 'delete': \n            return state.filter( todo => todo.id !== action.payload );\n        case 'toogle':\n            return state.map( todo => ( todo.id === action.payload ) ? { ...todo, done: !todo.done} : todo );\n        default: \n            return state;\n    }\n}","import React, { useReducer, useEffect } from 'react';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport { todoReducer } from './helpers/todoReducer';\n\nconst init = () => JSON.parse( localStorage.getItem('todos') ) || [];\n\nexport const TodoApp = () => {\n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\n\n    const addTodo =  ( todo ) => {\n        dispatch( { type: 'add', payload: todo } );\n    }\n\n    const deleteTodo = ( id ) => {\n        dispatch( { type: 'delete', payload: id } );\n    }\n\n    const toogleTodo = ( id ) => {\n        dispatch( { type: 'toogle', payload: id } );\n    }\n\n    useEffect( () => {\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }, [todos] )\n\n    return (\n        <>\n            <header className = 'header'>\n                <h1 className = 'header__title'> Todo </h1>\n            </header>\n            <main>\n                <TodoForm addTodo = {addTodo}/>\n                <TodoList todos = {todos} deleteTodo = { deleteTodo } toogleTodo = { toogleTodo }  />\n            </main>\n        </>\n    )\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { TodoApp } from \"./TodoApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\n\nreportWebVitals();\n"],"sourceRoot":""}